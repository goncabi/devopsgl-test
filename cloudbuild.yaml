substitutions:
  _REGION: "europe-west1"
  _AR_REPO: "hello-repo"
  _ENV: "dev"
  _SERVICE_NAME: "hello-world"

options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: 'ALLOW_LOOSE'

steps:
  # 1. Build & Test Stage (läuft automatisch im Dockerfile)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build with Tests'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}'
      - '.'

  # 2. Push the tested container image to Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}'

  # 3. Deploy the "Green" (new) version (0% traffic).
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Green'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - '${_SERVICE_NAME}-${_ENV}'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--no-traffic'

  # 4. Get Green URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Get Green URL'
    entrypoint: bash
    args:
      - -c
      - |
      # Lokale Bash-Variable für die Revision
        GREEN_REV=$(gcloud run services describe ${_SERVICE_NAME}-${_ENV} \
        --region=${_REGION} \
        --format="value(status.latestReadyRevisionName)")
        if [ -z "$GREEN_REV" ]; then
        GREEN_REV=$(gcloud run services describe ${_SERVICE_NAME}-${_ENV} \
        --region=${_REGION} \
        --format="value(status.latestCreatedRevisionName)")
        fi
        echo "Green revision: $GREEN_REV"
        gcloud run revisions describe "$GREEN_REV" --region=${_REGION} \
        --format="value(status.url)" > green_url.txt
        cat green_url.txt


# 5. Smoke Test (HTTP 200)
  - name: 'curlimages/curl'
    id: 'Smoke Test'
    entrypoint: /bin/sh
    args:
      - -c
      - |
        URL=$(cat green_url.txt)
        echo "Smoke testing $URL"
        curl --fail --silent --show-error "$URL" || (echo "Smoke test failed"; exit 1)

  # 6. Integration Test (Body prüfen)
  - name: 'node:18'
    id: 'Integration Tests'
    entrypoint: bash
    args:
      - -c
      - |
        URL=$(cat green_url.txt)
        npm ci
        node tests/integration/check_remote.js "$URL"

  # 7. Shift Traffic (nur wenn Tests bestanden)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Shift Traffic'
    entrypoint: gcloud
    args:
      - run
      - services
      - update-traffic
      - '${_SERVICE_NAME}-${_ENV}'
      - '--region=${_REGION}'
      - '--to-latest'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}'
